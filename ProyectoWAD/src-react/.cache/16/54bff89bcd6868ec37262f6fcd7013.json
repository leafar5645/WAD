{"id":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","dependencies":[{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\package.json","includedInParent":true,"mtime":1559071390840},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\.babelrc","includedInParent":true,"mtime":1558641273805},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\react-dnd\\package.json","includedInParent":true,"mtime":1559071370213},{"name":"react","loc":{"line":3,"column":22},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\react-dnd\\lib\\cjs\\utils\\cloneWithRef.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\react\\index.js"},{"name":"invariant","loc":{"line":4,"column":24},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\react-dnd\\lib\\cjs\\utils\\cloneWithRef.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\invariant\\browser.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    }\n    else {\n        ref.current = node;\n    }\n}\nfunction cloneWithRef(element, newRef) {\n    var previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return react_1.cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return react_1.cloneElement(element, {\n        ref: function (node) {\n            setRef(newRef, node);\n            if (previousRef) {\n                setRef(previousRef, node);\n            }\n        },\n    });\n}\nexports.default = cloneWithRef;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    }\n    else {\n        ref.current = node;\n    }\n}\nfunction cloneWithRef(element, newRef) {\n    var previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return react_1.cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return react_1.cloneElement(element, {\n        ref: function (node) {\n            setRef(newRef, node);\n            if (previousRef) {\n                setRef(previousRef, node);\n            }\n        },\n    });\n}\nexports.default = cloneWithRef;\n"},"lineCount":34}},"error":null,"hash":"fbc688d2765c1561ec6b08a7666fb2fc","cacheData":{"env":{}}}