{"id":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","dependencies":[{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\package.json","includedInParent":true,"mtime":1559071390840},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\.babelrc","includedInParent":true,"mtime":1558641273805},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\package.json","includedInParent":true,"mtime":1559071370187},{"name":"./local/setClientOffset","loc":{"line":3,"column":32},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\beginDrag.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\local\\setClientOffset.js"},{"name":"../../utils/discount_lodash","loc":{"line":4,"column":32},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\beginDrag.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\utils\\discount_lodash.js"},{"name":"invariant","loc":{"line":5,"column":24},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\beginDrag.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\invariant\\browser.js"},{"name":"./types","loc":{"line":6,"column":22},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\beginDrag.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\types.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar setClientOffset_1 = require(\"./local/setClientOffset\");\nvar discount_lodash_1 = require(\"../../utils/discount_lodash\");\nvar invariant = require('invariant');\nvar types_1 = require(\"./types\");\nvar ResetCoordinatesAction = {\n    type: types_1.INIT_COORDS,\n    payload: {\n        clientOffset: null,\n        sourceClientOffset: null,\n    },\n};\nfunction createBeginDrag(manager) {\n    return function beginDrag(sourceIds, options) {\n        if (sourceIds === void 0) { sourceIds = []; }\n        if (options === void 0) { options = {\n            publishSource: true,\n        }; }\n        var _a = options.publishSource, publishSource = _a === void 0 ? true : _a, clientOffset = options.clientOffset, getSourceClientOffset = options.getSourceClientOffset;\n        var monitor = manager.getMonitor();\n        var registry = manager.getRegistry();\n        // Initialize the coordinates using the client offset\n        manager.dispatch(setClientOffset_1.setClientOffset(clientOffset));\n        verifyInvariants(sourceIds, monitor, registry);\n        // Get the draggable source\n        var sourceId = getDraggableSource(sourceIds, monitor);\n        if (sourceId === null) {\n            manager.dispatch(ResetCoordinatesAction);\n            return;\n        }\n        // Get the source client offset\n        var sourceClientOffset = null;\n        if (clientOffset) {\n            verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n            sourceClientOffset = getSourceClientOffset(sourceId);\n        }\n        // Initialize the full coordinates\n        manager.dispatch(setClientOffset_1.setClientOffset(clientOffset, sourceClientOffset));\n        var source = registry.getSource(sourceId);\n        var item = source.beginDrag(monitor, sourceId);\n        verifyItemIsObject(item);\n        registry.pinSource(sourceId);\n        var itemType = registry.getSourceType(sourceId);\n        return {\n            type: types_1.BEGIN_DRAG,\n            payload: {\n                itemType: itemType,\n                item: item,\n                sourceId: sourceId,\n                clientOffset: clientOffset || null,\n                sourceClientOffset: sourceClientOffset || null,\n                isSourcePublic: !!publishSource,\n            },\n        };\n    };\n}\nexports.default = createBeginDrag;\nfunction verifyInvariants(sourceIds, monitor, registry) {\n    invariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n    for (var _i = 0, sourceIds_1 = sourceIds; _i < sourceIds_1.length; _i++) {\n        var s = sourceIds_1[_i];\n        invariant(registry.getSource(s), 'Expected sourceIds to be registered.');\n    }\n}\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n    invariant(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\nfunction verifyItemIsObject(item) {\n    invariant(discount_lodash_1.isObject(item), 'Item must be an object.');\n}\nfunction getDraggableSource(sourceIds, monitor) {\n    var sourceId = null;\n    for (var i = sourceIds.length - 1; i >= 0; i--) {\n        if (monitor.canDragSource(sourceIds[i])) {\n            sourceId = sourceIds[i];\n            break;\n        }\n    }\n    return sourceId;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}}],"sources":{"../node_modules/dnd-core/lib/cjs/actions/dragDrop/beginDrag.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar setClientOffset_1 = require(\"./local/setClientOffset\");\nvar discount_lodash_1 = require(\"../../utils/discount_lodash\");\nvar invariant = require('invariant');\nvar types_1 = require(\"./types\");\nvar ResetCoordinatesAction = {\n    type: types_1.INIT_COORDS,\n    payload: {\n        clientOffset: null,\n        sourceClientOffset: null,\n    },\n};\nfunction createBeginDrag(manager) {\n    return function beginDrag(sourceIds, options) {\n        if (sourceIds === void 0) { sourceIds = []; }\n        if (options === void 0) { options = {\n            publishSource: true,\n        }; }\n        var _a = options.publishSource, publishSource = _a === void 0 ? true : _a, clientOffset = options.clientOffset, getSourceClientOffset = options.getSourceClientOffset;\n        var monitor = manager.getMonitor();\n        var registry = manager.getRegistry();\n        // Initialize the coordinates using the client offset\n        manager.dispatch(setClientOffset_1.setClientOffset(clientOffset));\n        verifyInvariants(sourceIds, monitor, registry);\n        // Get the draggable source\n        var sourceId = getDraggableSource(sourceIds, monitor);\n        if (sourceId === null) {\n            manager.dispatch(ResetCoordinatesAction);\n            return;\n        }\n        // Get the source client offset\n        var sourceClientOffset = null;\n        if (clientOffset) {\n            verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n            sourceClientOffset = getSourceClientOffset(sourceId);\n        }\n        // Initialize the full coordinates\n        manager.dispatch(setClientOffset_1.setClientOffset(clientOffset, sourceClientOffset));\n        var source = registry.getSource(sourceId);\n        var item = source.beginDrag(monitor, sourceId);\n        verifyItemIsObject(item);\n        registry.pinSource(sourceId);\n        var itemType = registry.getSourceType(sourceId);\n        return {\n            type: types_1.BEGIN_DRAG,\n            payload: {\n                itemType: itemType,\n                item: item,\n                sourceId: sourceId,\n                clientOffset: clientOffset || null,\n                sourceClientOffset: sourceClientOffset || null,\n                isSourcePublic: !!publishSource,\n            },\n        };\n    };\n}\nexports.default = createBeginDrag;\nfunction verifyInvariants(sourceIds, monitor, registry) {\n    invariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n    for (var _i = 0, sourceIds_1 = sourceIds; _i < sourceIds_1.length; _i++) {\n        var s = sourceIds_1[_i];\n        invariant(registry.getSource(s), 'Expected sourceIds to be registered.');\n    }\n}\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n    invariant(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\nfunction verifyItemIsObject(item) {\n    invariant(discount_lodash_1.isObject(item), 'Item must be an object.');\n}\nfunction getDraggableSource(sourceIds, monitor) {\n    var sourceId = null;\n    for (var i = sourceIds.length - 1; i >= 0; i--) {\n        if (monitor.canDragSource(sourceIds[i])) {\n            sourceId = sourceIds[i];\n            break;\n        }\n    }\n    return sourceId;\n}\n"},"lineCount":82}},"error":null,"hash":"4918d8ddc4670938534652c21068a799","cacheData":{"env":{}}}