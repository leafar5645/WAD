{"id":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","dependencies":[{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\package.json","includedInParent":true,"mtime":1559071390840},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\.babelrc","includedInParent":true,"mtime":1558641273805},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\package.json","includedInParent":true,"mtime":1559071370187},{"name":"./actions/registry","loc":{"line":3,"column":25},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\registry.js"},{"name":"./utils/getNextUniqueId","loc":{"line":4,"column":32},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\utils\\getNextUniqueId.js"},{"name":"./interfaces","loc":{"line":5,"column":27},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\interfaces.js"},{"name":"./contracts","loc":{"line":6,"column":26},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\contracts.js"},{"name":"invariant","loc":{"line":7,"column":24},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\invariant\\browser.js"},{"name":"asap","loc":{"line":8,"column":19},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\HandlerRegistryImpl.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\asap\\browser-asap.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar registry_1 = require(\"./actions/registry\");\nvar getNextUniqueId_1 = require(\"./utils/getNextUniqueId\");\nvar interfaces_1 = require(\"./interfaces\");\nvar contracts_1 = require(\"./contracts\");\nvar invariant = require('invariant');\nvar asap = require('asap');\nfunction getNextHandlerId(role) {\n    var id = getNextUniqueId_1.default().toString();\n    switch (role) {\n        case interfaces_1.HandlerRole.SOURCE:\n            return \"S\" + id;\n        case interfaces_1.HandlerRole.TARGET:\n            return \"T\" + id;\n        default:\n            throw new Error(\"Unknown Handler Role: \" + role);\n    }\n}\nfunction parseRoleFromHandlerId(handlerId) {\n    switch (handlerId[0]) {\n        case 'S':\n            return interfaces_1.HandlerRole.SOURCE;\n        case 'T':\n            return interfaces_1.HandlerRole.TARGET;\n        default:\n            invariant(false, \"Cannot parse handler ID: \" + handlerId);\n    }\n}\nfunction mapContainsValue(map, searchValue) {\n    var entries = map.entries();\n    var isDone = false;\n    do {\n        var _a = entries.next(), done = _a.done, _b = _a.value, value = _b[1];\n        if (value === searchValue) {\n            return true;\n        }\n        isDone = done;\n    } while (!isDone);\n    return false;\n}\nvar HandlerRegistryImpl = /** @class */ (function () {\n    function HandlerRegistryImpl(store) {\n        this.store = store;\n        this.types = new Map();\n        this.dragSources = new Map();\n        this.dropTargets = new Map();\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    HandlerRegistryImpl.prototype.addSource = function (type, source) {\n        contracts_1.validateType(type);\n        contracts_1.validateSourceContract(source);\n        var sourceId = this.addHandler(interfaces_1.HandlerRole.SOURCE, type, source);\n        this.store.dispatch(registry_1.addSource(sourceId));\n        return sourceId;\n    };\n    HandlerRegistryImpl.prototype.addTarget = function (type, target) {\n        contracts_1.validateType(type, true);\n        contracts_1.validateTargetContract(target);\n        var targetId = this.addHandler(interfaces_1.HandlerRole.TARGET, type, target);\n        this.store.dispatch(registry_1.addTarget(targetId));\n        return targetId;\n    };\n    HandlerRegistryImpl.prototype.containsHandler = function (handler) {\n        return (mapContainsValue(this.dragSources, handler) ||\n            mapContainsValue(this.dropTargets, handler));\n    };\n    HandlerRegistryImpl.prototype.getSource = function (sourceId, includePinned) {\n        if (includePinned === void 0) { includePinned = false; }\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        var isPinned = includePinned && sourceId === this.pinnedSourceId;\n        var source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n        return source;\n    };\n    HandlerRegistryImpl.prototype.getTarget = function (targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.dropTargets.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.getSourceType = function (sourceId) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        return this.types.get(sourceId);\n    };\n    HandlerRegistryImpl.prototype.getTargetType = function (targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.types.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.isSourceId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.SOURCE;\n    };\n    HandlerRegistryImpl.prototype.isTargetId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.TARGET;\n    };\n    HandlerRegistryImpl.prototype.removeSource = function (sourceId) {\n        var _this = this;\n        invariant(this.getSource(sourceId), 'Expected an existing source.');\n        this.store.dispatch(registry_1.removeSource(sourceId));\n        asap(function () {\n            _this.dragSources.delete(sourceId);\n            _this.types.delete(sourceId);\n        });\n    };\n    HandlerRegistryImpl.prototype.removeTarget = function (targetId) {\n        invariant(this.getTarget(targetId), 'Expected an existing target.');\n        this.store.dispatch(registry_1.removeTarget(targetId));\n        this.dropTargets.delete(targetId);\n        this.types.delete(targetId);\n    };\n    HandlerRegistryImpl.prototype.pinSource = function (sourceId) {\n        var source = this.getSource(sourceId);\n        invariant(source, 'Expected an existing source.');\n        this.pinnedSourceId = sourceId;\n        this.pinnedSource = source;\n    };\n    HandlerRegistryImpl.prototype.unpinSource = function () {\n        invariant(this.pinnedSource, 'No source is pinned at the time.');\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    };\n    HandlerRegistryImpl.prototype.addHandler = function (role, type, handler) {\n        var id = getNextHandlerId(role);\n        this.types.set(id, type);\n        if (role === interfaces_1.HandlerRole.SOURCE) {\n            this.dragSources.set(id, handler);\n        }\n        else if (role === interfaces_1.HandlerRole.TARGET) {\n            this.dropTargets.set(id, handler);\n        }\n        return id;\n    };\n    return HandlerRegistryImpl;\n}());\nexports.default = HandlerRegistryImpl;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}}],"sources":{"../node_modules/dnd-core/lib/cjs/HandlerRegistryImpl.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar registry_1 = require(\"./actions/registry\");\nvar getNextUniqueId_1 = require(\"./utils/getNextUniqueId\");\nvar interfaces_1 = require(\"./interfaces\");\nvar contracts_1 = require(\"./contracts\");\nvar invariant = require('invariant');\nvar asap = require('asap');\nfunction getNextHandlerId(role) {\n    var id = getNextUniqueId_1.default().toString();\n    switch (role) {\n        case interfaces_1.HandlerRole.SOURCE:\n            return \"S\" + id;\n        case interfaces_1.HandlerRole.TARGET:\n            return \"T\" + id;\n        default:\n            throw new Error(\"Unknown Handler Role: \" + role);\n    }\n}\nfunction parseRoleFromHandlerId(handlerId) {\n    switch (handlerId[0]) {\n        case 'S':\n            return interfaces_1.HandlerRole.SOURCE;\n        case 'T':\n            return interfaces_1.HandlerRole.TARGET;\n        default:\n            invariant(false, \"Cannot parse handler ID: \" + handlerId);\n    }\n}\nfunction mapContainsValue(map, searchValue) {\n    var entries = map.entries();\n    var isDone = false;\n    do {\n        var _a = entries.next(), done = _a.done, _b = _a.value, value = _b[1];\n        if (value === searchValue) {\n            return true;\n        }\n        isDone = done;\n    } while (!isDone);\n    return false;\n}\nvar HandlerRegistryImpl = /** @class */ (function () {\n    function HandlerRegistryImpl(store) {\n        this.store = store;\n        this.types = new Map();\n        this.dragSources = new Map();\n        this.dropTargets = new Map();\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    HandlerRegistryImpl.prototype.addSource = function (type, source) {\n        contracts_1.validateType(type);\n        contracts_1.validateSourceContract(source);\n        var sourceId = this.addHandler(interfaces_1.HandlerRole.SOURCE, type, source);\n        this.store.dispatch(registry_1.addSource(sourceId));\n        return sourceId;\n    };\n    HandlerRegistryImpl.prototype.addTarget = function (type, target) {\n        contracts_1.validateType(type, true);\n        contracts_1.validateTargetContract(target);\n        var targetId = this.addHandler(interfaces_1.HandlerRole.TARGET, type, target);\n        this.store.dispatch(registry_1.addTarget(targetId));\n        return targetId;\n    };\n    HandlerRegistryImpl.prototype.containsHandler = function (handler) {\n        return (mapContainsValue(this.dragSources, handler) ||\n            mapContainsValue(this.dropTargets, handler));\n    };\n    HandlerRegistryImpl.prototype.getSource = function (sourceId, includePinned) {\n        if (includePinned === void 0) { includePinned = false; }\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        var isPinned = includePinned && sourceId === this.pinnedSourceId;\n        var source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n        return source;\n    };\n    HandlerRegistryImpl.prototype.getTarget = function (targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.dropTargets.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.getSourceType = function (sourceId) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        return this.types.get(sourceId);\n    };\n    HandlerRegistryImpl.prototype.getTargetType = function (targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.types.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.isSourceId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.SOURCE;\n    };\n    HandlerRegistryImpl.prototype.isTargetId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.TARGET;\n    };\n    HandlerRegistryImpl.prototype.removeSource = function (sourceId) {\n        var _this = this;\n        invariant(this.getSource(sourceId), 'Expected an existing source.');\n        this.store.dispatch(registry_1.removeSource(sourceId));\n        asap(function () {\n            _this.dragSources.delete(sourceId);\n            _this.types.delete(sourceId);\n        });\n    };\n    HandlerRegistryImpl.prototype.removeTarget = function (targetId) {\n        invariant(this.getTarget(targetId), 'Expected an existing target.');\n        this.store.dispatch(registry_1.removeTarget(targetId));\n        this.dropTargets.delete(targetId);\n        this.types.delete(targetId);\n    };\n    HandlerRegistryImpl.prototype.pinSource = function (sourceId) {\n        var source = this.getSource(sourceId);\n        invariant(source, 'Expected an existing source.');\n        this.pinnedSourceId = sourceId;\n        this.pinnedSource = source;\n    };\n    HandlerRegistryImpl.prototype.unpinSource = function () {\n        invariant(this.pinnedSource, 'No source is pinned at the time.');\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    };\n    HandlerRegistryImpl.prototype.addHandler = function (role, type, handler) {\n        var id = getNextHandlerId(role);\n        this.types.set(id, type);\n        if (role === interfaces_1.HandlerRole.SOURCE) {\n            this.dragSources.set(id, handler);\n        }\n        else if (role === interfaces_1.HandlerRole.TARGET) {\n            this.dropTargets.set(id, handler);\n        }\n        return id;\n    };\n    return HandlerRegistryImpl;\n}());\nexports.default = HandlerRegistryImpl;\n"},"lineCount":136}},"error":null,"hash":"be088dc069def05c93880d6e474dfd69","cacheData":{"env":{}}}