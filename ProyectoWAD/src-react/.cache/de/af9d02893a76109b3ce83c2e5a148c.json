{"id":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","dependencies":[{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\package.json","includedInParent":true,"mtime":1559071390840},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\.babelrc","includedInParent":true,"mtime":1558641273805},{"name":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\package.json","includedInParent":true,"mtime":1559071370187},{"name":"../../utils/matchesType","loc":{"line":3,"column":28},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\hover.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\utils\\matchesType.js"},{"name":"./types","loc":{"line":4,"column":22},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\hover.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\types.js"},{"name":"invariant","loc":{"line":5,"column":24},"parent":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\dnd-core\\lib\\cjs\\actions\\dragDrop\\hover.js","resolved":"C:\\Users\\Marcus\\Desktop\\WAD\\WAD\\ProyectoWAD\\src-react\\node_modules\\invariant\\browser.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matchesType_1 = require(\"../../utils/matchesType\");\nvar types_1 = require(\"./types\");\nvar invariant = require('invariant');\nfunction createHover(manager) {\n    return function hover(targetIdsArg, _a) {\n        var clientOffset = (_a === void 0 ? {} : _a).clientOffset;\n        verifyTargetIdsIsArray(targetIdsArg);\n        var targetIds = targetIdsArg.slice(0);\n        var monitor = manager.getMonitor();\n        var registry = manager.getRegistry();\n        checkInvariants(targetIds, monitor, registry);\n        var draggedItemType = monitor.getItemType();\n        removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n        hoverAllTargets(targetIds, monitor, registry);\n        return {\n            type: types_1.HOVER,\n            payload: {\n                targetIds: targetIds,\n                clientOffset: clientOffset || null,\n            },\n        };\n    };\n}\nexports.default = createHover;\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n    invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n    invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n    for (var i = 0; i < targetIds.length; i++) {\n        var targetId = targetIds[i];\n        invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n        var target = registry.getTarget(targetId);\n        invariant(target, 'Expected targetIds to be registered.');\n    }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n    // Remove those targetIds that don't match the targetType.  This\n    // fixes shallow isOver which would only be non-shallow because of\n    // non-matching targets.\n    for (var i = targetIds.length - 1; i >= 0; i--) {\n        var targetId = targetIds[i];\n        var targetType = registry.getTargetType(targetId);\n        if (!matchesType_1.default(targetType, draggedItemType)) {\n            targetIds.splice(i, 1);\n        }\n    }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n    // Finally call hover on all matching targets.\n    for (var _i = 0, targetIds_1 = targetIds; _i < targetIds_1.length; _i++) {\n        var targetId = targetIds_1[_i];\n        var target = registry.getTarget(targetId);\n        target.hover(monitor, targetId);\n    }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"../node_modules/dnd-core/lib/cjs/actions/dragDrop/hover.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matchesType_1 = require(\"../../utils/matchesType\");\nvar types_1 = require(\"./types\");\nvar invariant = require('invariant');\nfunction createHover(manager) {\n    return function hover(targetIdsArg, _a) {\n        var clientOffset = (_a === void 0 ? {} : _a).clientOffset;\n        verifyTargetIdsIsArray(targetIdsArg);\n        var targetIds = targetIdsArg.slice(0);\n        var monitor = manager.getMonitor();\n        var registry = manager.getRegistry();\n        checkInvariants(targetIds, monitor, registry);\n        var draggedItemType = monitor.getItemType();\n        removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n        hoverAllTargets(targetIds, monitor, registry);\n        return {\n            type: types_1.HOVER,\n            payload: {\n                targetIds: targetIds,\n                clientOffset: clientOffset || null,\n            },\n        };\n    };\n}\nexports.default = createHover;\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n    invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n    invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n    for (var i = 0; i < targetIds.length; i++) {\n        var targetId = targetIds[i];\n        invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n        var target = registry.getTarget(targetId);\n        invariant(target, 'Expected targetIds to be registered.');\n    }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n    // Remove those targetIds that don't match the targetType.  This\n    // fixes shallow isOver which would only be non-shallow because of\n    // non-matching targets.\n    for (var i = targetIds.length - 1; i >= 0; i--) {\n        var targetId = targetIds[i];\n        var targetType = registry.getTargetType(targetId);\n        if (!matchesType_1.default(targetType, draggedItemType)) {\n            targetIds.splice(i, 1);\n        }\n    }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n    // Finally call hover on all matching targets.\n    for (var _i = 0, targetIds_1 = targetIds; _i < targetIds_1.length; _i++) {\n        var targetId = targetIds_1[_i];\n        var target = registry.getTarget(targetId);\n        target.hover(monitor, targetId);\n    }\n}\n"},"lineCount":60}},"error":null,"hash":"d166b12956803b8e84f9b209b7bf8c13","cacheData":{"env":{}}}